{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ServicioClienteService {\n  constructor(servicio) {\n    this.servicio = servicio;\n    this.ingresar = false;\n    this.usuario = {};\n    this.usuarioSec = {};\n    this.servidor = \"http://localhost:4238\";\n  }\n  ConsultarClientes() {\n    return this.servicio.get(`${this.servidor}/usuarios`);\n  }\n  CrearClientes(datos) {\n    return this.servicio.post(`${this.servidor}/crearClientes`, JSON.stringify(datos), httpOptions);\n  }\n  Login(datos) {\n    return this.servicio.post(`${this.servidor}/retornoUsuario`, JSON.stringify(datos), httpOptions);\n  }\n  CrearComentarios(datos) {\n    return this.servicio.post(`${this.servidor}/crearComentarios`, JSON.stringify(datos), httpOptions);\n  }\n  ConsultarComentarios() {\n    return this.servicio.get(`${this.servidor}/comentarios`);\n  }\n  CrearCursos(datos) {\n    return this.servicio.post(`${this.servidor}/crearCursos`, JSON.stringify(datos), httpOptions);\n  }\n  ConsultarCursos() {\n    return this.servicio.get(`${this.servidor}/cursos`);\n  }\n  ModificarClientes(datos) {\n    return this.servicio.post(`${this.servidor}/modificarUsuario`, JSON.stringify(datos), httpOptions);\n  }\n  ModificarPass(datos) {\n    return this.servicio.post(`${this.servidor}/modificarPass`, JSON.stringify(datos), httpOptions);\n  }\n  ingresarAplicativo(obj) {\n    if (obj.Estado == true) {\n      this.ingresar = true;\n    }\n    return this.ingresar;\n  }\n  encapsular(usuario) {\n    return this.usuario = usuario;\n  }\n  devolver() {\n    return this.usuario;\n  }\n  encapsularSec(usuario) {\n    return this.usuarioSec = usuario;\n  }\n  devolverSec() {\n    return this.usuarioSec;\n  }\n}\nServicioClienteService.ɵfac = function ServicioClienteService_Factory(t) {\n  return new (t || ServicioClienteService)(i0.ɵɵinject(i1.HttpClient));\n};\nServicioClienteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServicioClienteService,\n  factory: ServicioClienteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;;;AAK5D,MAAMC,WAAW,GAAE;EACjBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAC,cAAc,EAAE;EAAkB,CAAC;CAC9D;AAMD,OAAM,MAAOG,sBAAsB;EASjCC,YAAoBC,QAAmB;IAAnB,aAAQ,GAARA,QAAQ;IARpB,aAAQ,GAAW,KAAK;IACxB,YAAO,GAAO,EAAE;IAChB,eAAU,GAAO,EAAE;IAG3B,aAAQ,GAAC,uBAAuB;EAGW;EAE3CC,iBAAiB;IACf,OAAO,IAAI,CAACD,QAAQ,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,WAAW,CAAC;EAEvD;EAGAC,aAAa,CAACC,KAAa;IACzB,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,gBAAgB,EAAEI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAGT,WAAW,CAAC;EAElG;EAEAa,KAAK,CAACJ,KAAS;IACb,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,iBAAiB,EAAEI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAGT,WAAW,CAAC;EAEnG;EAEAc,gBAAgB,CAACL,KAAgB;IAC/B,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,mBAAmB,EAAEI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAGT,WAAW,CAAC;EAErG;EAEAe,oBAAoB;IAClB,OAAO,IAAI,CAACX,QAAQ,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,cAAc,CAAC;EAE1D;EAGAS,WAAW,CAACP,KAAS;IACnB,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,cAAc,EAAEI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAGT,WAAW,CAAC;EAEhG;EAEAiB,eAAe;IACb,OAAO,IAAI,CAACb,QAAQ,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,QAAQ,SAAS,CAAC;EAErD;EAEAW,iBAAiB,CAACT,KAAS;IACzB,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,mBAAmB,EAAEI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAGT,WAAW,CAAC;EAErG;EAEAmB,aAAa,CAACV,KAAS;IACrB,OAAO,IAAI,CAACL,QAAQ,CAACM,IAAI,CAAC,GAAG,IAAI,CAACH,QAAQ,gBAAgB,EAAEI,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,EAAGT,WAAW,CAAC;EAElG;EAMOoB,kBAAkB,CAACC,GAAO;IAC/B,IAAGA,GAAG,CAACC,MAAM,IAAI,IAAI,EAAC;MACpB,IAAI,CAACC,QAAQ,GAAG,IAAI;;IAGtB,OAAO,IAAI,CAACA,QAAQ;EACtB;EAEAC,UAAU,CAACC,OAAW;IACpB,OAAO,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC/B;EAEAC,QAAQ;IACN,OAAO,IAAI,CAACD,OAAO;EACrB;EAGAE,aAAa,CAACF,OAAW;IACvB,OAAO,IAAI,CAACG,UAAU,GAAGH,OAAO;EAClC;EAEAI,WAAW;IACT,OAAO,IAAI,CAACD,UAAU;EACxB;;AArFW1B,sBAAsB;mBAAtBA,sBAAsB;AAAA;AAAtBA,sBAAsB;SAAtBA,sBAAsB;EAAA4B,SAAtB5B,sBAAsB;EAAA6B,YAHrB;AAAM","names":["HttpHeaders","httpOptions","headers","ServicioClienteService","constructor","servicio","ConsultarClientes","get","servidor","CrearClientes","datos","post","JSON","stringify","Login","CrearComentarios","ConsultarComentarios","CrearCursos","ConsultarCursos","ModificarClientes","ModificarPass","ingresarAplicativo","obj","Estado","ingresar","encapsular","usuario","devolver","encapsularSec","usuarioSec","devolverSec","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\dwigh\\Desktop\\Practica I\\Frontend\\src\\app\\servicios\\servicio-cliente.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http'\nimport {Observable} from 'rxjs'\nimport { Cliente } from '../interfaces/cliente';\nimport { Comentario } from '../interfaces/comentario';\n\nconst httpOptions ={\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ServicioClienteService {\n  private ingresar:boolean = false;\n  private usuario:any = {};\n  private usuarioSec:any = {};\n\n\n  servidor=\"http://localhost:4238\"\n\n\n  constructor(private servicio:HttpClient) { }\n\n  ConsultarClientes(): Observable <any>{\n    return this.servicio.get(`${this.servidor}/usuarios`);\n   \n  }\n\n\n  CrearClientes(datos:Cliente): Observable <any>{\n    return this.servicio.post(`${this.servidor}/crearClientes`, JSON.stringify(datos) , httpOptions);\n\n  }\n\n  Login(datos:any): Observable <any>{\n    return this.servicio.post(`${this.servidor}/retornoUsuario`, JSON.stringify(datos) , httpOptions);\n\n  }\n\n  CrearComentarios(datos:Comentario): Observable <any>{\n    return this.servicio.post(`${this.servidor}/crearComentarios`, JSON.stringify(datos) , httpOptions);\n\n  }\n\n  ConsultarComentarios(): Observable <any>{\n    return this.servicio.get(`${this.servidor}/comentarios`);\n   \n  }\n\n\n  CrearCursos(datos:any): Observable <any>{\n    return this.servicio.post(`${this.servidor}/crearCursos`, JSON.stringify(datos) , httpOptions);\n\n  }\n\n  ConsultarCursos(): Observable <any>{\n    return this.servicio.get(`${this.servidor}/cursos`);\n   \n  }\n\n  ModificarClientes(datos:any): Observable <any>{\n    return this.servicio.post(`${this.servidor}/modificarUsuario`, JSON.stringify(datos) , httpOptions);\n\n  }\n\n  ModificarPass(datos:any): Observable <any>{\n    return this.servicio.post(`${this.servidor}/modificarPass`, JSON.stringify(datos) , httpOptions);\n\n  }\n\n\n\n\n\n  public ingresarAplicativo(obj:any):boolean{\n    if(obj.Estado == true){\n      this.ingresar = true;\n    }\n\n    return this.ingresar;\n  }\n\n  encapsular(usuario:any){\n    return this.usuario = usuario;\n  }\n\n  devolver(){\n    return this.usuario;\n  }\n\n\n  encapsularSec(usuario:any){\n    return this.usuarioSec = usuario;\n  }\n\n  devolverSec(){\n    return this.usuarioSec;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}